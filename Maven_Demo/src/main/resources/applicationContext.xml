<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
<!--    <bean id="UserDao" class="com.impl.UserDaoImpl" />-->

<!--    <bean id="userService" class="com.impl.UserServiceImpl" scope="singleton">-->
<!--        <property name="userDao" ref="userDao"/>-->
<!--    </bean>-->

<!--    <bean id="myBean2Factory" class="com.impl.MyBean2Factory"/>-->

<!--    <bean id="bean2" factory-bean="myBean2Factory" factory-method="createBean"/>-->

<!--    <bean id="user2" class="com.impl.User">-->
<!--        <property name="name" value="李四"/>-->
<!--        <property name="age" value="18"/>-->
<!--    </bean>-->

<!--    <bean id="user1" class="com.impl.User">-->
<!--        <constructor-arg index="0" value="王五"/>-->
<!--        <constructor-arg index="1" value="19"/>-->
<!--    </bean>-->

<!--    <context:annotation-config/>-->
<!--    <context:component-scan base-package="com"/>-->

<!--    <bean id="userDao" class="com.impl.UserDaoImpl"/>-->
<!--    <bean id="userService" class="com.impl.UserServiceImpl" autowire="byType"/>-->
<!--    <bean id="userController" class="com.impl.UserController" autowire="byType"/>-->


<!--    <bean id="userDao" class="com.ch03.UserDaoImpl"/>-->
<!--    <bean id="springInterceptor" class="com.ch03.SpringInterceptor"/>-->
<!--    <bean id="proxy" class="org.springframework.aop.framework.ProxyFactoryBean">-->
<!--        <property name="proxyInterfaces" value="com.ch03.UserDao"/>-->
<!--        <property name="target" ref="userDao"/>-->
<!--        <property name="interceptorNames" value="springInterceptor"/>-->
<!--    </bean>-->


<!--    <bean id="userDao" class="com.impl.UserDaoImpl"/>-->
<!--&lt;!&ndash;    <bean id="myAspect" class="com.ch03.aspect.MyAspect"/>&ndash;&gt;-->
<!--    <bean id="myAspect" class="com.ch03.aspect.MyAspect"/>-->
<!--        <aop:config>-->
<!--        <aop:aspect ref="myAspect">-->
<!--        <aop:pointcut id="myPointCut" expression="execution(* com.UserDao.*(..))"/>-->
<!--        <aop:before method="myBefore" pointcut-ref="myPointCut"/>-->
<!--        <aop:after method="myAfter" pointcut-ref="myPointCut"/>-->
<!--        <aop:after-returning method="myAfterReturning" pointcut-ref="myPointCut"/>-->
<!--        <aop:around method="myAround" pointcut-ref="myPointCut"/>-->
<!--        <aop:after-throwing method="myAfterThrowing" throwing="throwable" pointcut-ref="myPointCut"/>-->
<!--        </aop:aspect>-->
<!--        </aop:config>-->
<!--        <context:component-scan base-package="com"/>-->
<!--        <aop:aspectj-autoproxy/>-->
<!--    </beans>  -->

<!--    <bean id="userDao" class="com.ch03.UserDaoImpl"/>-->
<!--    <bean id="myAspect" class="com.ch03.SpringAOP.MyAspect"/>-->
<!--    <bean id="userDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">-->
<!--        <property name="proxyInterfaces" value="com.ch03.UserDao"/>-->
<!--        <property name="target" ref="userDao"/>-->
<!--        <property name="interceptorNames" value="myAspect"/>-->
<!--        <property name="proxyTargetClass" value="true"/>-->
<!--    </bean>-->

    <bean id="dataSource" class=
            "org.springframework.jdbc.datasource.DriverManagerDataSource">
        <!--数据库驱动 -->
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
<!--        <property name="driverClassName" value="${driver}" />-->
        <!--连接数据库的url -->
        <property name="url" value="jdbc:mysql://127.0.0.1:3306/spring?serverTimezone=UTC" />
<!--        <property name="url" value="${url}" />-->
        <!--连接数据库的用户名 -->
        <property name="username" value="root" />
        <!--连接数据库的密码 -->
        <property name="password" value="liuliang1314" />
    </bean>

    <bean id="jdbcTemplate"
          class="org.springframework.jdbc.core.JdbcTemplate">
        <!-- 默认必须使用数据源 -->
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="accountDao" class="com.ch04.AccountDaoImpl">
        <!-- 将jdbcTemplate注入到accountDao实例中 -->
        <property name="jdbcTemplate" ref="jdbcTemplate" />
    </bean>

    <bean id="transactionManager" class=
            "org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 5.注册事务管理器驱动 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- 5.编写通知：对事务进行增强(通知),需要编写对切入点和具体执行事务细节 -->
<!--    <tx:advice id="txAdvice" transaction-manager="transactionManager">-->
<!--    <tx:attributes>-->
<!--        &lt;!&ndash; name：*表示任意方法名称 &ndash;&gt;-->
<!--        <tx:method name="*" propagation="REQUIRED"-->
<!--                   isolation="DEFAULT" read-only="false" />-->
<!--    </tx:attributes>-->
<!--</tx:advice>-->

    <!-- 6.编写aop，让spring自动对目标生成代理，需要使用AspectJ的表达式 -->
<!--    <aop:config>-->
<!--    &lt;!&ndash; 切入点 &ndash;&gt;-->
<!--    <aop:pointcut expression="execution(* com.ch04.AccountDao.transfer(..))"-->
<!--    id="txPointCut" />-->
<!--    &lt;!&ndash; 切面：将切入点与通知整合 &ndash;&gt;-->
<!--    <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut" />-->
<!--    </aop:config>-->


</beans>